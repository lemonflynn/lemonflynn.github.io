<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-08-01T09:34:49+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Slow and Fast</title><subtitle>Slow and fast are couple of relative concepts, i hope to record the fast changing tech(and world) in this slow way.</subtitle><entry><title type="html">kvm io model</title><link href="http://localhost:4000/virtualization/2021/08/01/kvm-io.html" rel="alternate" type="text/html" title="kvm io model" /><published>2021-08-01T09:20:16+08:00</published><updated>2021-08-01T09:20:16+08:00</updated><id>http://localhost:4000/virtualization/2021/08/01/kvm-io</id><content type="html" xml:base="http://localhost:4000/virtualization/2021/08/01/kvm-io.html">&lt;p&gt;&lt;a href=&quot;/assets/kvm_io_model/kvm_io.pdf&quot;&gt;qemu-io&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="virtualization" /><summary type="html">qemu-io</summary></entry><entry><title type="html">Introduction about kvm and qemu</title><link href="http://localhost:4000/virtualization/2021/08/01/qemu-kvm-vm.html" rel="alternate" type="text/html" title="Introduction about kvm and qemu" /><published>2021-08-01T08:20:16+08:00</published><updated>2021-08-01T08:20:16+08:00</updated><id>http://localhost:4000/virtualization/2021/08/01/qemu-kvm-vm</id><content type="html" xml:base="http://localhost:4000/virtualization/2021/08/01/qemu-kvm-vm.html">&lt;p&gt;&lt;a href=&quot;/assets/qemu_kvm_vm/qemu-kvm.pdf&quot;&gt;qemu-kvm&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="virtualization" /><summary type="html">qemu-kvm</summary></entry><entry><title type="html">Qemu Thread Model</title><link href="http://localhost:4000/2021/08/01/qemu-thread-model.html" rel="alternate" type="text/html" title="Qemu Thread Model" /><published>2021-08-01T00:00:00+08:00</published><updated>2021-08-01T00:00:00+08:00</updated><id>http://localhost:4000/2021/08/01/qemu-thread-model</id><content type="html" xml:base="http://localhost:4000/2021/08/01/qemu-thread-model.html">&lt;h1 id=&quot;non-iothread&quot;&gt;non-iothread&lt;/h1&gt;
&lt;p&gt;早期的qemu并不支持多线程，它只有一个线程，在这个线程中完成vcpu、设备模拟和事件处理等逻辑；当该线程正在执行vcpu虚拟机的代码时，如果此时虚拟机发生了一个异常或该线程收到了一个信号，则cpu从执行虚拟机的代码切换到qemu代码，然后根据select的返回结果去处理对应的文件描述符，等完成设备的模拟逻辑后，就接着执行虚拟机的代码。&lt;/p&gt;
&lt;h1 id=&quot;iothread&quot;&gt;iothread&lt;/h1&gt;
&lt;p&gt;non-iothread的模型并不能利用多核处理器的性能，假如传入-smp 2，即要虚拟出2个vcpu，此时qemu也只有一个线程，在该线程中轮流交替的选择一个vcpu来运行，其也只是用到了一个物理cpu。&lt;/p&gt;

&lt;p&gt;新的线程模型是为每一个vcpu分配一个线程，外加一个main loop线程（用来监听文件描述符、eventfd、定时器和中断下半部），可能还会有设备的worker thread（用来卸载main loop的负载，例如vnc）。因为QEMU的代码不是thread-safe的，也就意味着QEMU的代码不能同时被多个线程运行，所以需要一个全局mutex来保证。当vcpu从guest code中退出到qemu中时，需要运行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;qemu_mutex_lock_iothread&lt;/code&gt;来获取这个全局锁，之后才能执行QEMU的代码；在进入guest code前使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;qemu_mutex_unlock_iothread&lt;/code&gt;来释放该锁。&lt;/p&gt;

&lt;h1 id=&quot;引用&quot;&gt;引用&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.vmsplice.net/2011/03/qemu-internals-overall-architecture-and.html&quot;&gt;QEMU Internals: Overall architecture and threading model&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.vmsplice.net/2020/08/qemu-internals-event-loops.html&quot;&gt;QEMU Internals: Event loops&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">non-iothread 早期的qemu并不支持多线程，它只有一个线程，在这个线程中完成vcpu、设备模拟和事件处理等逻辑；当该线程正在执行vcpu虚拟机的代码时，如果此时虚拟机发生了一个异常或该线程收到了一个信号，则cpu从执行虚拟机的代码切换到qemu代码，然后根据select的返回结果去处理对应的文件描述符，等完成设备的模拟逻辑后，就接着执行虚拟机的代码。 iothread non-iothread的模型并不能利用多核处理器的性能，假如传入-smp 2，即要虚拟出2个vcpu，此时qemu也只有一个线程，在该线程中轮流交替的选择一个vcpu来运行，其也只是用到了一个物理cpu。</summary></entry></feed>